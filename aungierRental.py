# -*- coding: utf-8 -*-
"""car.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BC1_JWfwzLEhMOLkUVhKJNlfrtcxExBI
"""

class Car(object):
    
    def __init__(self):
        self.__colour = ''
        self.__make = ''
        self.__model = ''
        self.__mileage = 0
        self.__reg = ''
        
    def setColour(self, colour):
        self.__colour = colour

    def getColour(self):
        return self.__colour

    def setMake(self, make):
        self.__make = make

    def getMake(self):
        return self.__make

    def setModel(self, model):
        self.__model = model

    def getModel(self):
        return self.__model

    def setMileage(self, mileage):
        self.__mileage = mileage

    def getMileage(self):
        return self.__mileage

    def move(self, distance):
        print('Moved ' + str(distance) + 'kms')
        self.__mileage = self.__mileage + distance
        
    def setReg(self, reg):
        self.__reg = reg
      
    def getReg(self):
        return self.__reg
      
    def __repr__(self):
      return '(colour=%s, make=%s, model=%s, reg=%s)' % (self.__colour, self.__make, self.__model, self.__reg)

class DieselCar(Car):
    
    def __init__(self):
        Car.__init__(self)
        self.__engineSize = '1000cc'
        
    def getEngineSize(self):
        return self.__engineSize
    
    def setEngineSize(self, engineSize):
        self.__engineSize = engineSize
        
class ElectricCar(Car):
    
    def __init__(self):
        Car.__init__(self)
        self.__numberFuelCells = 1
        
    def getNumberFuelCells(self):
        return self.__numberFuelCells
    
    def setNumberFuelCells(self, numberFuelCells):
        self.__numberFuelCells = numberFuelCells
        
class HybridCar(Car):
    
    def __init__(self):
        Car.__init__(self)
        self.__numberFuelCells = 1
        
    def getNumberFuelCells(self):
        return self.__numberFuelCells
    
    def setNumberFuelCells(self, numberFuelCells):
        self.__numberFuelCells = numberFuelCells

class PetrolCar(Car):
    
    def __init__(self):
        Car.__init__(self)
        self.__engineSize = '1000cc'
        
    def getEngineSize(self):
        return self.__engineSize
    
    def setEngineSize(self, engineSize):
        self.__engineSize = engineSize

class AungierRental(object):
    
    def __init__(self):
        self.__diesel_cars = []
        self.__electric_cars = []
        self.__hybrid_cars = []
        self.__petrol_cars = []
        
        import pandas as pd
        from google.colab import files
        files.upload()
        cars = pd.read_csv("Cars.csv")
        
        for index, row in cars.iterrows():
          if row['Type'] == 'D':
            
            reg_it = row['Reg']
            
            reg_it = DieselCar()
            
            reg_it.setColour(row['Colour'])
            reg_it.setMake(row['Make'])
            reg_it.setModel(row['Model'])
            reg_it.setReg(row['Reg'])
            self.__diesel_cars.append(reg_it)
                     
          elif row['Type'] == 'E':
            
            reg_it = row['Reg']
            
            reg_it = ElectricCar()
            
            reg_it.setColour(row['Colour'])
            reg_it.setMake(row['Make'])
            reg_it.setModel(row['Model'])
            reg_it.setReg(row['Reg'])
            self.__electric_cars.append(reg_it)
            
          elif row['Type'] == 'H':
            
            reg_it = row['Reg']
            
            reg_it = HybridCar()
            
            reg_it.setColour(row['Colour'])
            reg_it.setMake(row['Make'])
            reg_it.setModel(row['Model'])
            reg_it.setReg(row['Reg'])
            self.__hybrid_cars.append(reg_it)  
            
          elif row['Type'] == 'P':
            
            reg_it = row['Reg']
            
            reg_it = PetrolCar()
            
            reg_it.setColour(row['Colour'])
            reg_it.setMake(row['Make'])
            reg_it.setModel(row['Model'])
            reg_it.setReg(row['Reg'])
            self.__petrol_cars.append(reg_it)
         
#         import gc
#         for obj in gc.get_objects():
#           if isinstance(obj, DieselCar):
#             print(obj)
#           elif isinstance(obj, ElectricCar):
#             print(obj)
#           elif isinstance(obj, HybridCar):
#             print(obj)
#           elif isinstance(obj, PetrolCar):
#             print(obj)
       


    def getDieselCars(self):
        return self.__diesel_cars
        
    def getElectricCars(self):
        return self.__electric_cars
        
    def getHybridCars(self):
        return self.__hybrid_cars
    
    def getPetrolCars(self):
        return self.__petrol_cars
        
    def checkCarsInStock(self):
        
        print('Number of Diesel Cars : ', len(self.getDieselCars()))
        print('Number of Electric Cars : ', len(self.getElectricCars()))
        print('Number of Hybrid Cars : ', len(self.getHybridCars()))
        print('Number of Petrol Cars : ', len(self.getPetrolCars()))
        

    def rent(self, type):
        
        if len(self.getDieselCars()) == 0 and len(self.getElectricCars()) == 0 and len(self.getHybridCars()) == 0 and len(self.getPetrolCars())==0:
            print("All cars are rented out, take the bus!")
        else:
            
            if type == 'D':
                if len(self.__diesel_cars) >0:
                    return self.__diesel_cars.pop()
                else:
                    print('\n' + 'No Diesel cars remaining')
            
            elif type == 'E':
                if len(self.__electric_cars) >0:
                    return self.__electric_cars.pop()
                else:
                    print('\n' + 'No Electric cars remaining')
            
            elif type == 'H':
                if len(self.__hybrid_cars) >0:
                    return self.__hybrid_cars.pop()
                else:
                    print('\n' + 'No Hybrid cars remaining')
                    
            elif type == 'P':
                if len(self.__petrol_cars) >0:
                    return self.__petrol_cars.pop()
                else:
                    print('\n' + 'No Petrol cars remaining')
        
    def returnCar(self, type):
        
        if len(self.getDieselCars()) == 8 and len(self.getElectricCars()) == 4 and len(self.getHybridCars()) == 8 and len(self.getPetrolCars())== 20:
            print("All cars are returned, did you rob this one instead?")
            
        import pandas as pd
        cars = pd.read_csv("Cars.csv")
         
          
        reg_it = input("Please enter the registration of the car: ")
        
        if type == 'D':
            if len(self.__diesel_cars) <8:
              
              for index, row in cars.iterrows():
                if row['Reg'] == reg_it:
              
                              
                    reg_it = DieselCar()
            
                    reg_it.setColour(row['Colour'])
                    reg_it.setMake(row['Make'])
                    reg_it.setModel(row['Model'])
                    reg_it.setReg(row['Reg'])
                    self.__diesel_cars.append(reg_it)
                
            else:
                print('\n' + 'All Diesel cars returned, try again')
                
        elif type == 'E':
            if len(self.__electric_cars) <4:
              
              for index, row in cars.iterrows():
                if row['Reg'] == reg_it:
              
                              
                    reg_it = ElectricCar()
            
                    reg_it.setColour(row['Colour'])
                    reg_it.setMake(row['Make'])
                    reg_it.setModel(row['Model'])
                    reg_it.setReg(row['Reg'])
                    self.__electric_cars.append(reg_it)
            else:
                print('\n' + 'All Electric cars returned, try again')
                
        elif type == 'H':
            if len(self.__hybrid_cars) <8:
              for index, row in cars.iterrows():
                if row['Reg'] == reg_it:
              
                              
                    reg_it = HybridCar()
            
                    reg_it.setColour(row['Colour'])
                    reg_it.setMake(row['Make'])
                    reg_it.setModel(row['Model'])
                    reg_it.setReg(row['Reg'])
                    self.__hybrid_cars.append(reg_it)
            else:
                print('\n' + 'All Hybrid cars returned, try again')
                
        elif type == 'P':
            if len(self.__hybrid_cars) <20:
              for index, row in cars.iterrows():
                if row['Reg'] == reg_it:
              
                              
                    reg_it = PetrolCar()
            
                    reg_it.setColour(row['Colour'])
                    reg_it.setMake(row['Make'])
                    reg_it.setModel(row['Model'])
                    reg_it.setReg(row['Reg'])
                    self.__petrol_cars.append(reg_it)
            else:
                print('\n' + 'All Hybrid cars returned, try again')

    def mainMenu(self):
        
        while 1==1:
            
            print("**********************")
            print('Welcome to Aungier Rental')
            print("**********************")
            print('\n' + "What would you like to do?", '\n')
            print("1. Rent a Car." + '\n' + '2. Return a Car.' + '\n' + '3. Quit')
            
            answer = input()
            
            if answer == '3':
                print('\n' + 'Goodbye')
                break
            elif answer !='1' and answer !='2':
                print('Invalid input, try again')
            
            else:
                while 1==1:
                    if answer == '1':
                        print('What car would you like to rent?')
                        type = input('D for Diesel, E for electric, H for Hybrid, P for petrol, M for Main Menu: ')
                        type= type.upper()
                        if type == 'M':
                            break
                        elif type!= 'D' and type!='E' and type!= 'H' and type!= 'P':
                            print("Please try again.")
                        else:
                            self.rent(type)
                            self.checkCarsInStock()
                            break
                    elif answer == '2':
                        print('What car would you like to return?')
                        type = input('D for Diesel, E for electric, H for Hybrid, P for petrol, M for Main Menu: ')
                        type = type.upper()
                        if type == 'M':
                            break
                        elif type!= 'D' and type!='E' and type!= 'H' and type!= 'P':
                            print("Please try again.")
                        else:
                            self.returnCar(type.upper())
                            self.checkCarsInStock()
                            break
               
                
Martin = AungierRental()
Martin.mainMenu()



